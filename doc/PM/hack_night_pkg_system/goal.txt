目前的是离线安装包 （OK）
在打开自动升级的情况下，能自动升级系统版本
（确认最小依赖）

支持在线安装包（能下载安装的都下载安装）
在线安装包->自动升级系统版本
要确定系统升级的时机，并以此作为未来整个系统运行的一个前提：系统停机升级 vs 系统不停机升级
不管是自动升级还是手工升级都涉及到的“覆盖安装的问题”
实现该需求还潜在的包含了版本的发布流程

发布一个（系统）版本：
构建版本->打包（需要用到开发者私钥）-> 上传到自己的OOD（发布完成） 
Repo server可以用自己的逻辑来进行新版本同步
	- 要求发布者手工提交
	- 自动同步含有特定lable的版本（比如自动同步stable版本的更新）



第一阶段计划：
song: repo_server
sun:buckyos store
lzc:node_daemon与zone-repo-server通信，实现自动升级

第二阶段：------------------------------------------------------------------------------------


添加新应用（新的docker）的流程：
下载所有必要数据到local cache
手动添加镜像
添加必要的本地目录
添加必要的system config 配置（最后一步）
安装完成

更新应用的流程
下载新版本的包并校验
执行升级流程，升级开始前明确的告知用户是否要操作应用的数据（是否进行数据升级），这是一个不可撤销的风险，我们一般不建议应用这么干（注意执行备份时，需要同时知道备份时应用的版本）



升级后的回退
1.大部分系统都没有体系化的支持回退，而是使用“发布一个修复版”的方法来解决问题
2.我们应当支持APP版本的按需回退，支持用户在放弃网络功能的情况下，使用任意版本的APP是我们的一个重要的承诺
