不给自己添麻烦的单向依赖（关键节点的简单可靠和不变性）

1）读取本地版本配置文件，得到远程版本，确认升级，下载，下载校验，安装，更新本地版本配置

上述流程都充分相信本地配置文件的正确性，要保证在开发阶段，随意修改本地文件（但不修改本地版本配置）绝对不会触发意料外的自动校验和自动升级

2）下载和安装的完全分离。每台OOD上都有 Local Cache. 当本OOD上的相关机制决定要升级时，先是尝试在Local Cache中找到正确的升级包，如果没有，再触发下载流程。 只要能写入到Local Cache的正确位置，可以使用任意方式实现下载

3）升级的时机选择，和升级的一致性管理（应对升级过程中的中断）
a.总是在一次升级到的所有数据都完成了在Local Cache中的校验后才开始执行升级（确保不会因为网络而中断）
b.因为运行的过程中不会对版本状态进行任何校验，因此安装的最后一步是
 rename + 写入版本信息。
这样在最后一步完成前，总是可以无害的，幂等的反复执行升级安装操作
系统可以配合这个目标调整目录结构


优化设计，确保每个组件的“职责清楚，依赖简单，易于组合”，由简单可靠的基础组件组合成完整系统。