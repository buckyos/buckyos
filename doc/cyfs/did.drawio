<mxfile host="Electron" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/26.0.9 Chrome/128.0.6613.186 Electron/32.2.5 Safari/537.36" version="26.0.9">
  <diagram name="Page-1" id="dgCNba_4N36sK-C0k3VW">
    <mxGraphModel dx="891" dy="641" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="gQ9-Sp076uqV0BIO-Fmd-1" value="# CYFS的名字系统&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;CYFS基本上使用W3C的 DID/DID-Document设计来描述系统中的有身份实体。所谓的有身份实体是指能成为操作的发起者（可以做主语），相对的，NamedData体系里使用ObjId,这些Obj通常是被操作的对象（可以做宾语）&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;系统里打量使用DID来构造URL，尤其是包含用于描述“主谓宾”的结构里，主语通常很难省略，比如下面url(使用cyfs://只是为了说明其是符合cyfs规范的url,实际使用中可以用http://,但不是https)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;```&lt;/div&gt;&lt;div&gt;cyfs://$did/$objid/$obj_field&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div&gt;```&lt;/div&gt;&lt;div&gt;上面URL指向obj的一个字段，其谓语为默认的“持有语意” ，&amp;nbsp; &amp;nbsp;说明&amp;nbsp; $did持有$objid&lt;/div&gt;&lt;div&gt;从上面例子可看到，did通常和域名的意义相同. 另一方面，因为域名具有广义的唯一性，所以所有的域名都是did.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;## 解析DID：resolve($did)&amp;nbsp; --&amp;gt; NameInfo&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;过去，通过域名可以得到一系列的Record，并且通过一些特殊的Record(NS,CNAME),还可以改变查询逻辑。这些记录域名的拥有者并不需要拥有任何服务器就可以保障这些查询的可用性，DNS协议的查询是通过域名注册商的服务器来实现的。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;传统的DNS协议，明面上最大的问题有2个&lt;/div&gt;&lt;div&gt;1. 因为协议基于UDP，所以能返回的Record长度非常有限&lt;/div&gt;&lt;div&gt;2. 标准的DNS协议几乎是明文协议，易于被篡改和污染。&amp;nbsp;&lt;/div&gt;&lt;div&gt;目前的DNS生态通过引入EDNS,DNSSEC,DoT,DoH&amp;nbsp; 能解决一些问题，但这些新的协议让DNS协议的实现（尤其是服务端）的实现都变的复杂了&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;DNS系统在支持建立可信通信上的核心问题？&lt;/div&gt;&lt;div&gt;1. 中心化&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cyfs-ns 要演进到基于区块链的BNS系统）&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2. 域名和CA系统割裂：用户要向证书提供商证明自己拥有该域名，并交保护费。&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;这钱花的值得么？。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cyfs-ns 通过 名字解析直接得到可用公钥，不需要再引入证书系统。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;3. 在传输层看不到 准确的名字，只能看到IP，这潜在的让整个路由系统都在面向链接优化路由，而不是面向内容优化路由。需要接入CDN来提高内容的传输速度和可靠性&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;cyfs协议鼓励区分使用http和https, 可以选择用 明文可信传输来传输公开发布的内容，这些内容更易于被整个网络去中心化的缓存。&amp;nbsp;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;上面3个核心问题也导致了今天个人难以独立的通过http://协议发布自己的内容&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;在开发上。&lt;/div&gt;&lt;div&gt;开发环境需要对DNS的返回结果进行一些配置，配置host功能太简单（有的设备难以在无管理员权限的情况下配置Host），而自建开发DNS又太复杂，并容易引入无法上网的BUG。 （如何让一组设备的解析结果走自定义的规则， 到底是改Client还是改Server的问题）&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;DNS协议通常还用来做GLB（Global Load Balance),一般CDN厂商尤其擅长。错误的DNS协议配置通常会导致“无法上网的严重后果”，所以&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;解析返回的是NameInfo,DID Document只是其中的一部分。这是因为查询名字返回的结果里，存在一些字段是“可变的” (所有以Info结尾的数据结构，都说明该结构包含一部分可变部分。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;## 使用人类友好的DID&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;什么时候使用did:pub:xxxx?&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;使用人类友好的DID，最关键的安全问题是如何通过该友好名字，得到可信的公钥，进而对后续的所有关联数据进行验证。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;## BNS是理想的实现&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;## 向下兼容，演进&lt;/div&gt;&lt;div&gt;在DNS记录中配置地址&lt;/div&gt;&lt;div&gt;在DNS记录中配置DID Document和PublicKey&lt;/div&gt;&lt;div&gt;建立hostname&amp;lt;-&amp;gt;标准DID的转换机制&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;引入可配置的网桥&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;通过特定URL获取zone_config进行探测&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="30" y="10" width="460" height="1460" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
