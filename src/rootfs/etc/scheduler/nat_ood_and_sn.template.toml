# users
"users/{{user_name}}/info" = '{"type":"admin","password":"{{admin_password_hash}}"}'

# devices,set & update by register_device_doc@node_daemon
#"devices/ood1/doc" = "ood1_doc"
# devices,set & update by update_device_info@node_daemon
#"devices/ood1/info" = "ood1_info"

# system settings

"system/verify_hub/key" = """
{{verify_hub_key}}
"""
# frames & services
"services/verify_hub/info" = """
{
    "port":3300,
    "node_list":["ood1"],
    "type":"kernel"
}
"""
"services/verify_hub/setting" = """
{
    "trust_keys" : []
}
"""
"services/scheduler/info" = """
{
    "port":3400,
    "node_list":["ood1"],
    "type":"kernel"
}
"""
# info for zone-gateway
"services/gateway/info" = """
{
    "port":3100,
    "node_list":["ood1"],
    "type":"kernel"
}
"""
"services/gateway/setting" = """
{
    "shortcuts": {
        "www": {
            "type":"app",
            "owner":"{{user_name}}",
            "app_id":"home-station"
        },
        "sys": {
            "type":"app",
            "owner":"{{user_name}}",
            "app_id":"control-panel"
        },
        "test":{
            "type":"app",
            "owner":"{{user_name}}",
            "app_id":"sys-test"
        }
    }
}
"""
# install apps
"users/{{user_name}}/apps/home-station/config" = """
{
    "app_id":"home-station",
    "username" : "{{user_name}}",
    "app_name" : "Home Station",
    "app_description" : "Home Station",
    "vendor_did" : "did:bns:buckyos",
    "pkg_id" : "home-station",
    "service_docker_images" : {
        "x86_server" : "filebrowser/filebrowser:s6",
        "arm64_server" : "filebrowser/filebrowser:s6"
    },
    "data_mount_point" : "/srv",
    "cache_mount_point" : "/database/",
    "local_cache_mount_point" : "/config/",
    "max_cpu_num" : 4,
    "max_cpu_percent" : 80, 
    "memory_quota" : 1073741824, 
    "host_name" : "www",
    "port" : 20080,
    "org_port" : 80
}
"""
# nocde config
"nodes/ood1/config" = """
{
    "is_running":true,
    "revision" : 0,
    "kernel" : {
        "verify_hub" : {
            "target_state":"Running",
            "pkg_id":"verify_hub",
            "operations":{
                "status":{
                    "command":"status",
                    "params":[]
                },
                "start":{
                    "command":"start",
                    "params":[]
                },
                "stop":{
                    "command":"stop",
                    "params":[]
                }
            }
        },
        "scheduler" : {
            "target_state":"Running",
            "pkg_id":"scheduler",
            "operations":{
                "status":{
                    "command":"status",
                    "params":[]
                },
                "start":{
                    "command":"start",
                    "params":[]
                },
                "stop":{
                    "command":"stop",
                    "params":[]
                }
            }
        }
    },
    "services":{
    },
    "apps":{
        "app":{
            "target_state":"Running",
            "app_id":"home-station",
            "username":"{{user_name}}"
        }
    }
}
"""
"system/rbac/model" = """
[request_definition]
r = sub,obj,act

[policy_definition]
p = sub, obj, act, eft

[role_definition]
g = _, _ # sub, role

[policy_effect]
e = priority(p.eft) || deny

[matchers]
m = (g(r.sub, p.sub) || r.sub == p.sub) && ((r.sub == keyGet3(r.obj, p.obj, p.sub) || keyGet3(r.obj, p.obj, p.sub) =="") && keyMatch3(r.obj,p.obj)) && regexMatch(r.act, p.act)
"""
"system/rbac/policy" = """
p, kernel, kv://*, read|write,allow
p, kernel, dfs://*, read|write,allow

p, owner, kv://*, read|write,allow
p, owner, dfs://*, read|write,allow

p, user, kv://*, read,allow
p, user, dfs://public/*,read|write,allow
p, user, dfs://homes/{user}/*, read|write,allow
p, app,  dfs://homes/*/apps/{app}/*, read|write,allow

p, limit, dfs://public/*, read,allow
p, guest, dfs://public/*, read,allow

g, node_daemon, kernel
g, ood01,ood
g, alice, user
g, bob, user
g, app1, app
g, app2, app
"""

"boot/config" = """
{
    "did":"did:ens:{{user_name}}",
    "oods":["ood1"],
    "sn":"{{sn_host}}",
    "verify_hub_info":{
        "port":3300,
        "node_name":"ood1",
        "public_key":{{verify_hub_public_key}}
    }
}
"""
