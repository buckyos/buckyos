name: Upload Artifacts To BuckyOS OOD

on:
  workflow_call:
    inputs:
      version:
        description: 'Version number'
        required: true
        type: string
      build_time:
        required: true
        type: string
      run_id:
        required: true
        type: number
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true
        type: string
      build_time:
        required: true
        type: string
      run_id:
        required: true
        type: number

jobs:
    upload:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                os: [windows, linux, macos]
                arch: [aarch64, x86_64]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: clean old rootfs
              run: rm -rf ./src/rootfs 
            - name: Download Artifact
              uses: actions/download-artifact@v4
              with:
                name: buckyos-${{matrix.os}}-${{matrix.arch}}-${{inputs.version}}-${{ inputs.build_time }}
                github-token: ${{ secrets.GITHUB_TOKEN }}
                run-id: ${{inputs.run_id}}
                path: ${{matrix.os == 'windows' && './src/rootfs' || '.'}}
            - name: untar rootfs
              if: ${{ matrix.os != 'windows' }}
              run: tar -xvf rootfs.tar
            - name: check rootfs
              run: 'ls -l ./src/rootfs'
            - name: Download Tools
              uses: actions/download-artifact@v4
              with:
                name: buckyos-tools-linux-x86_64-${{inputs.version}}-${{ inputs.build_time }}
                github-token: ${{ secrets.GITHUB_TOKEN }}
                run-id: ${{inputs.run_id}}
                path: tools
            - name: Prepare Tools
              run: chmod +x ./tools/*
            - name: Write Identify Files
              run: |-
                mkdir ~/.buckycli
                printf '%s' '${{secrets.USER_CONFIG}}' > ~/.buckycli/user_config.json
                printf '%s' '${{secrets.USER_PEM}}' > ~/.buckycli/user_private_key.pem
                printf '%s' '${{secrets.MACHINE_CONFIG}}' > ~/.buckycli/machine_config.json
                printf '%s' '${{secrets.NODE_IDENTIFY}}' > ~/.buckycli/node_identity.json
                printf '%s' '${{secrets.NODE_PEM}}' > ~/.buckycli/node_private_key.pem
                printf '%s' '${{secrets.START_CONFIG}}' > ~/.buckycli/start_config.json
                ls -l ~/.buckycli
            - name: Prepare Package
              working-directory: ./src
              run: python3 scripts/prepare_packages.py nightly ${{matrix.os}} ${{matrix.arch}} ${{inputs.version}} ${{ inputs.build_time }}
              env:
                BUCKYCLI_PATH: ${{github.workspace}}/tools/buckycli
            - name: Pack and Upload Package to OOD
              working-directory: ./src
              run: python3 scripts/pub_buckyos_pkgs.py --no-index
              env:
                BUCKYCLI_PATH: ${{github.workspace}}/tools/buckycli