name: Build Buckyos Linux Components
on: 
    workflow_call:
        inputs:
            version:
                required: true
                type: string
            arch:
                required: true
                type: string
        outputs:
            build_time:
                value: ${{jobs.build.outputs.build_time}}


jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
    - uses: Kaven-Universe/github-action-current-date-time@v1
      id: date
      with:
            format: 'YYYYMMDD'
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: "latest"
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: ${{inputs.arch}}-unknown-linux-${{inputs.arch == 'aarch64' && 'gnu' || 'musl'}}
    - name: Setup Needed Packages
      run: |
          sudo apt update
          sudo apt install -y musl-tools gcc-aarch64-linux-gnu
    - name: build web apps
      working-directory: ./src
      run: python3 scripts/build_web_apps.py
    - name: build bin
      working-directory: ./src
      run: python3 scripts/build.py --no-build-web-apps --no-install --target=${{inputs.arch}}-unknown-linux-${{inputs.arch == 'aarch64' && 'gnu' || 'musl'}}
    - name: Tar Rootfs
      run: tar -cvf rootfs.tar ./src/rootfs
    - name: Prepare tools
      run: |
        mkdir -p tools
        cp ./src/rootfs/bin/buckycli/buckycli ./tools/
    - name: Upload tools
      uses: actions/upload-artifact@v4
      with:
        name: buckyos-tools-linux-${{inputs.arch}}-${{inputs.version}}-${{ steps.date.outputs.time }}
        path: tools
        if-no-files-found: error
    - name: Upload
      uses: actions/upload-artifact@v4
      id: upload
      with:
        name: buckyos-linux-${{inputs.arch}}-${{inputs.version}}-${{ steps.date.outputs.time }}
        path: rootfs.tar
        if-no-files-found: error
    outputs:
      build_time: ${{ steps.date.outputs.time }}

