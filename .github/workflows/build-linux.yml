name: Build Buckyos Linux Components
on: 
    workflow_call:
        inputs:
            version:
                required: true
                type: string
            arch:
                required: true
                type: string
        outputs:
            result:
                description: 'build result'
                value: ${{ jobs.build.outputs.uploaded }}


jobs:
  build:
    strategy:
      matrix:
        arch: ["x86_64", "aarch64"]
    name: build
    runs-on: ubuntu-latest
    steps:
    - uses: Kaven-Universe/github-action-current-date-time@v1
      id: date
      with:
            format: 'YYYYMMDD'
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: "latest"
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: ${{matrix.arch}}-unknown-linux-musl
    - name: Setup Needed Packages
      run: |
          sudo apt update
          sudo apt install -y musl-tools gcc-aarch64-linux-gnu
    - name: build web apps
      working-directory: ./src
      run: python3 scripts/build_web_apps.py
    - name: build bin
      working-directory: ./src
      run: python3 scripts/build.py --no-build-web-apps --no-install  --tray-controller --auto-win-sdk --target=${{matrix.arch}}-unknown-linux-musl
    - name: Upload
      uses: actions/upload-artifact@v4
      id: upload
      with:
        name: buckyos-linux-${{matrix.arch}}-${{inputs.version}}-${{ steps.date.outputs.time }}
        path: src/rootfs
        if-no-files-found: error
    - uses: cloudposse/github-action-matrix-outputs-write@v1
      id: out
      with:
        matrix-step-name: build
        matrix-key: ${{inputs.arch}}
        outputs: |-
            name: buckyos-linux-${{matrix.arch}}-${{inputs.version}}-${{ steps.date.outputs.time }}
            url: ${{ steps.upload.outputs.artifact-url }}
    outputs:
      result: ${{steps.out.outputs}}

